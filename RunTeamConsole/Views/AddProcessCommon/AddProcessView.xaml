<UserControl x:Class="RunTeamConsole.Views.AddProcessView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:RunTeamConsole.Views" xmlns:Conv="clr-namespace:RunTeamConsole.Converters"
             mc:Ignorable="d" 
             d:DesignHeight="600" d:DesignWidth="1020">
    <UserControl.Resources>

        <!-- Brushes for the selected item -->
        <LinearGradientBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFFDF2DA" Offset="0"/>
            <GradientStop Color="#FFF7D280" Offset="1"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="{x:Static SystemColors.ControlBrushKey}" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="White" Offset="0"/>
            <GradientStop Color="#FFE2E2E2" Offset="1"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="Black" />
        <SolidColorBrush x:Key="{x:Static SystemColors.ControlTextBrushKey}" Color="Black" />
        
        <Style x:Key="ExpandCollapseToggleStyle" TargetType="ToggleButton">
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Grid
                Width="15"
                Height="13"
                Background="Transparent">
                            <Path 
                    x:Name="ExpandPath"
                    HorizontalAlignment="Left" 
                    VerticalAlignment="Center" 
                    Margin="1,1,1,1"
                    Fill="Black"
                    Data="M 4 0 L 8 4 L 4 8 Z"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Data" TargetName="ExpandPath" Value="M 0 4 L 8 4 L 4 8 Z"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="TreeViewItemStyle1" TargetType="{x:Type TreeViewItem}">
            <Setter Property="IsSelected" Value="{Binding MenuItem.IsSelected, Mode=TwoWay}" />
            <Setter Property="IsExpanded" Value="{Binding MenuItem.IsExpanded, Mode=TwoWay}" />
            <Setter Property="KeyboardNavigation.AcceptsReturn" Value="True" />
            <!-- Style for the selected item -->
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TreeViewItem}">
                        <ControlTemplate.Resources>
                            <Conv:LeftMarginMultiplierConverter Length="19" x:Key="lengthConverter" />
                        </ControlTemplate.Resources>
                        <StackPanel>
                            <Border 
                                x:Name="Bd"
                                Background="White"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}">
                                <Grid Margin="{Binding Converter={StaticResource lengthConverter}, RelativeSource={RelativeSource TemplatedParent}}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="19" />
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <ToggleButton 
                                        Grid.Column="0" 
                                        x:Name="Expander"
                                        Style="{StaticResource ExpandCollapseToggleStyle}"
                                        IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                                        ClickMode="Press"/>
                                    <ContentPresenter x:Name="PART_Header" Grid.Column="1" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" ContentSource="Header" />
                                </Grid>
                            </Border>
                            <ItemsPresenter x:Name="ItemsHost" />
                        </StackPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded" Value="false">
                                <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed"/>
                            </Trigger>
                            <Trigger Property="HasItems" Value="false">
                                <Setter TargetName="Expander" Property="Visibility" Value="Hidden"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="HasHeader" Value="false"/>
                                    <Condition Property="Width" Value="Auto"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="PART_Header" Property="MinWidth" Value="75"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="HasHeader" Value="false"/>
                                    <Condition Property="Height" Value="Auto"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="PART_Header" Property="MinHeight" Value="19"/>
                            </MultiTrigger>
                            <Trigger Property="IsSelected" Value="true">
                                <!--<Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>-->
                                <Setter TargetName="Bd" Property="Background" Value="#FFF1F1F1"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="true"/>
                                    <Condition Property="IsSelectionActive" Value="false"/>
                                </MultiTrigger.Conditions>
                                <!--<Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>-->
                                <Setter TargetName="Bd" Property="Background" Value="#FFDADADA"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <!-- Selected and has focus -->
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="BorderBrush" Value="#FFF1F1F1"/>
                </Trigger>
                <!-- Mouse over -->
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="White"/>
                    <!--<Setter Property="Background">
                        <Setter.Value>
                            <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                <GradientStop Color="#FFFAFBFD" Offset="0"/>
                                <GradientStop Color="#fadfa3" Offset="1"/>
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>-->
                    <Setter Property="BorderBrush" Value="White"/>
                </Trigger>
                <!-- Selected but does not have the focus -->
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsSelected" Value="True"/>
                        <Condition Property="IsSelectionActive" Value="False"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="BorderBrush" Value="Gray"/>
                </MultiTrigger>
            </Style.Triggers>
            <Style.Resources>
                <Style TargetType="Border">
                    <Setter Property="CornerRadius" Value="0"/>
                </Style>
            </Style.Resources>
        </Style>
        <CollectionViewSource Source="{Binding Path=AddProcessFlow}" x:Key="listingDataView"/>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <DataTemplate x:Key="ControlsSubMenuTemplate">
            <Border BorderBrush="White" BorderThickness="0,0,0,1" Background="White">
                <StackPanel Orientation="Horizontal">
                    <Label Content="{Binding Title}" HorizontalAlignment="Left" VerticalAlignment="Top" FontSize="14" VerticalContentAlignment="Top" FontFamily="72"/>
                    <Image HorizontalAlignment="Left" Source="{Binding Icon}" Width="16" VerticalAlignment="Top" Margin="0,6,0,0" Height="16"/>
                </StackPanel>
            </Border>
        </DataTemplate>
        <HierarchicalDataTemplate x:Key="ControlMenuTemplate" ItemsSource="{Binding MenuItem.Items}" ItemTemplate="{StaticResource ControlsSubMenuTemplate}">
            <Border BorderBrush="White" BorderThickness="0,0,0,1"  Background="#FFF1F1F1">
                <StackPanel Orientation="Horizontal">
                    <Label Content="{Binding MenuItem.Title}" HorizontalAlignment="Left" VerticalAlignment="Top" FontSize="14" VerticalContentAlignment="Top" FontFamily="72"/>
                    <Image HorizontalAlignment="Left" Source="{Binding MenuItem.Icon}" Width="16" VerticalAlignment="Top" Margin="0,6,0,0" Height="16"/>
                </StackPanel>
            </Border>
        </HierarchicalDataTemplate>
    </UserControl.Resources>
    <Grid Background="White">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="22*"/>
            <ColumnDefinition Width="71*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="478*"/>
            <RowDefinition Height="67*"/>
        </Grid.RowDefinitions>
        <Border BorderBrush="WhiteSmoke" BorderThickness="1,1,1,1">
            <StackPanel Background="#FFF1F1F1" VerticalAlignment="Top" HorizontalAlignment="Stretch">
                <Border BorderBrush="#FFC7C7C7" BorderThickness="0,0,0,1" Background="#FFF1F1F1">
                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Center">
                        <Label Grid.ColumnSpan="3" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="16" FontFamily="72" FontWeight="Bold">Add a New Process
                        </Label>
                        <Image Source="/img/icons/info-lines.png" HorizontalAlignment="Right" VerticalAlignment="Center" ToolTip="They will appear according to your process" Margin="0,7,7,7" MaxWidth="25"/>
                    </Grid>
                </Border>
                <TreeView Name="ControlsMenu" ItemsSource="{Binding Source={StaticResource listingDataView}}" ItemTemplate="{StaticResource ControlMenuTemplate}" ItemContainerStyle="{StaticResource TreeViewItemStyle1}" HorizontalContentAlignment="Stretch" BorderBrush="#FFB2B2B2">
                </TreeView>
            </StackPanel>
        </Border>

        <Border BorderBrush="WhiteSmoke" BorderThickness="1,1,1,1" Grid.Column="2">
            <ContentControl x:Name="contentControl" Content="{Binding CurrentControl.UserControl}" BorderBrush="#FF575757" Background="White" Grid.Column="1"/>
        </Border>
        
        <Button Command="{Binding ChangePrincipalViewCommand}" VerticalAlignment="Center" HorizontalAlignment="Left" Padding="15,5,15,5" Grid.Row="2" FontSize="16" Height="33" Width="79">Cancel</Button>
        <StackPanel Grid.Column="1" HorizontalAlignment="Right" Orientation="Horizontal" Grid.Row="1" VerticalAlignment="Center">
            <Button Command="{Binding ChangePrevViewCommand}" Padding="15,5,15,5" FontSize="16" Visibility="{Binding IsEnabled, Converter={StaticResource BooleanToVisibilityConverter}, RelativeSource={RelativeSource Self}, UpdateSourceTrigger=PropertyChanged}" Content="Back" Margin="0,0,20,0"/>
            <Button Command="{Binding ShowAddToFavoritesPromtCommand}" Padding="15,5,15,5" FontSize="16"  Content="Add to Favorites" Margin="0,0,20,0"
                     Visibility="{Binding IsEnabled, Converter={StaticResource BooleanToVisibilityConverter}, RelativeSource={RelativeSource Self}, UpdateSourceTrigger=PropertyChanged}"/>
            <Button Command="{Binding ChangeNextViewCommand}" Content="Next" HorizontalAlignment="Center" VerticalAlignment="Top" Padding="15,5,15,5" FontSize="16" Background="#FFA4DCB1" Margin="0,0,20,0"/>
            <Button Command="{Binding ScheduleProcessesCommand}" Content="Finish" VerticalAlignment="Top" Padding="15,5,15,5" FontSize="16" Background="#FFA4DCB1" Visibility="{Binding RelativeSource={RelativeSource Self}, Path=IsEnabled, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BooleanToVisibilityConverter}}"/>
        </StackPanel>
    </Grid>
</UserControl>
